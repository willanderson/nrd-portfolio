{% import "_includes/forms" as forms %}
{% from "remote-core/macros" import configWarning %}

{{ forms.lightswitchField({
    first: true,
    label: "Enabled"|t('remote-core'),
    instructions: "Enable the plugin"|t('remote-core'),
    name: 'enabled',
    id: 'enabled',
    on: settings.enabled,
    errors: settings.getErrors('enabled'),
    warning: configWarning('enabled', pluginHandle)
}) }}

<hr>

{{ forms.selectField({
    label: "Cloud Provider"|t('remote-core'),
    id: 'cloudProvider',
    name: 'cloudProvider',
    options: [
        { label: 'Amazon S3', value: 's3' },
        { label: 'Backblaze B2', value: 'b2' },
        { label: 'Google Drive', value: 'google' },
        { label: 'Dropbox', value: 'dropbox' },
        { label: 'Digital Ocean Spaces', value: 'do' },
        { label: 'Other S3-Compliant Provider', value: 'other-s3' }
    ],
    value: settings.cloudProvider,
    required: true,
    errors: settings.getErrors('cloudProvider'),
    warning: configWarning('cloudProvider', pluginHandle)
}) }}

{# AWS #}
<div class="provider provider-s3">
    {{ forms.autosuggestField({
        label: "S3 Access Key"|t('remote-core'),
        instructions: "The access key associated with your IAM user"|t('remote-core'),
        name: 's3AccessKey',
        id: 's3AccessKey',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.s3AccessKey,
        required: (settings.cloudProvider == 's3'),
        type: 'password',
        errors: settings.getErrors('s3AccessKey'),
        warning: configWarning('s3AccessKey', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "S3 Secret Key",
        instructions: "The secret key associated with your IAM user"|t('remote-core'),
        name: 's3SecretKey',
        id: 's3SecretKey',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.s3SecretKey,
        required: (settings.cloudProvider == 's3'),
        type: 'password',
        errors: settings.getErrors('s3SecretKey'),
        warning: configWarning('s3SecretKey', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "S3 Bucket Name"|t('remote-core'),
        instructions: "The name of the S3 bucket you want to send backups to"|t('remote-core'),
        name: 's3BucketName',
        id: 's3BucketName',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.s3BucketName,
        placeholder: "my-craft-backups",
        required: (settings.cloudProvider == 's3'),
        errors: settings.getErrors('s3BucketName'),
        warning: configWarning('s3BucketName', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "S3 Region Name"|t('remote-core'),
        instructions: "The AWS region your S3 bucket is in"|t('remote-core'),
        name: 's3RegionName',
        id: 's3RegionName',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.s3RegionName,
        placeholder: "us-west-2",
        required: (settings.cloudProvider == 's3'),
        errors: settings.getErrors('s3RegionName'),
        warning: configWarning('s3RegionName', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "S3 Bucket Path"|t('remote-core'),
        instructions: "A path within your S3 bucket to prefix your backups with. Do not include a leading or trailing slash"|t('remote-core'),
        name: 's3BucketPath',
        id: 's3BucketPath',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.s3BucketPath,
        placeholder: "craft-backups/my-site",
        errors: settings.getErrors('s3BucketPath'),
        warning: configWarning('s3BucketPath', pluginHandle)
    }) }}
</div>

{# Backblaze B2 #}
<div class="provider provider-b2">
    {{ forms.autosuggestField({
        label: "B2 Key ID"|t('remote-core'),
        instructions: "Your Backblaze 'keyID'"|t('remote-core'),
        name: 'b2MasterKeyID',
        id: 'b2MasterKeyID',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.b2MasterKeyID,
        required: (settings.cloudProvider == 'b2'),
        type: 'password',
        errors: settings.getErrors('b2MasterKeyID'),
        warning: configWarning('b2MasterKeyID', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "B2 Application Key",
        instructions: "Your Backblaze 'applicationKey'"|t('remote-core'),
        name: 'b2MasterAppKey',
        id: 'b2MasterAppKey',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.b2MasterAppKey,
        required: (settings.cloudProvider == 'b2'),
        type: 'password',
        errors: settings.getErrors('b2MasterAppKey'),
        warning: configWarning('b2MasterAppKey', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "B2 Region Name"|t('remote-core'),
        instructions: "The region your B2 bucket is in"|t('remote-core'),
        name: 'b2RegionName',
        id: 'b2RegionName',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.b2RegionName,
        placeholder: "us-west-002",
        required: (settings.cloudProvider == 'b2'),
        errors: settings.getErrors('b2RegionName'),
        warning: configWarning('b2RegionName', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "B2 Bucket Name"|t('remote-core'),
        instructions: "The name of the B2 bucket you want to send backups to"|t('remote-core'),
        name: 'b2BucketName',
        id: 'b2BucketName',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.b2BucketName,
        placeholder: "my-craft-backups",
        required: (settings.cloudProvider == 'b2'),
        errors: settings.getErrors('b2BucketName'),
        warning: configWarning('b2BucketName', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "B2 Bucket Path"|t('remote-core'),
        instructions: "An optional path within your B2 bucket to prefix your backups with. Do not include a leading or trailing slash. [Learn more](https://github.com/weareferal/craft-remote-core/wiki/Backblaze-B2#optional-folder-path)"|t('remote-core'),
        name: 'b2BucketPath',
        id: 'b2BucketPath',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.b2BucketPath,
        placeholder: "craft-backups/my-site",
        errors: settings.getErrors('b2BucketPath'),
        warning: configWarning('b2BucketPath', pluginHandle)
    }) }}
</div>

{# Google Drive #}
<div class="provider provider-google">
    {{ forms.autosuggestField({
        label: "Google Drive Project Name",
        instructions: "The name of your project in the Google Developer Console"|t('remote-core'),
        name: 'googleProjectName',
        id: 'googleProjectName',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.googleProjectName,
        required: (settings.cloudProvider == 'google'),
        errors: settings.getErrors('googleProjectName'),
        warning: configWarning('googleProjectName', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "Google Drive Client ID"|t('remote-core'),
        instructions: "The generated oauth client ID"|t('remote-core'),
        name: 'googleClientId',
        id: 'googleClientId',
        suggestEnvVars: true,
        suggestAliases: true,
        type: 'password',
        value: settings.googleClientId,
        required: (settings.cloudProvider == 'google'),
        errors: settings.getErrors('googleClientId'),
        warning: configWarning('googleClientId', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "Google Drive Client Secret",
        instructions: "The generated oauth secret key"|t('remote-core'),
        name: 'googleClientSecret',
        id: 'googleClientSecret',
        suggestEnvVars: true,
        suggestAliases: true,
        type: 'password',
        value: settings.googleClientSecret,
        required: (settings.cloudProvider == 'google'),
        errors: settings.getErrors('googleClientSecret'),
        warning: configWarning('googleClientSecret', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "Google Drive Auth Redirect",
        instructions: "The URL to redirect to after succesful oauth authentication"|t('remote-core'),
        name: 'googleAuthRedirect',
        id: 'googleAuthRedirect',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.googleAuthRedirect,
        required: (settings.cloudProvider == 'google'),
        errors: settings.getErrors('googleAuthRedirect'),
        warning: configWarning('googleAuthRedirect', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "Google Drive Folder ID",
        instructions: "The ID for the folder you want to upload backups to (optional but recommended)"|t('remote-core'),
        name: 'googleDriveFolderId',
        id: 'googleDriveFolderId',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.googleDriveFolderId,
        errors: settings.getErrors('googleDriveFolderId'),
        warning: configWarning('googleDriveFolderId', pluginHandle)
    }) }}    

    {% if isConfigured and not isAuthenticated %}
        <div>
            <a href="/admin/{{ pluginHandle }}/google-drive/auth" class="btn">{{"Authenticate with Google Drive"|t}}</a>
        </div>
    {% endif %}
</div>

{# Dropbox #}
<div class="provider provider-dropbox">
    {{ forms.autosuggestField({
        label: "Dropbox App Key",
        instructions: "You Dropbox app's app key"|t('remote-core'),
        name: 'dropboxAppKey',
        id: 'dropboxAppKey',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.dropboxAppKey,
        required: (settings.cloudProvider == 'dropbox'),
        errors: settings.getErrors('dropboxAppKey'),
        warning: configWarning('dropboxAppKey', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "Dropbox Secret Key",
        instructions: "You Dropbox app's secret key"|t('remote-core'),
        name: 'dropboxSecretKey',
        id: 'dropboxSecretKey',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.dropboxSecretKey,
        required: (settings.cloudProvider == 'dropbox'),
        errors: settings.getErrors('dropboxSecretKey'),
        warning: configWarning('dropboxSecretKey', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "Dropbox Access Token",
        instructions: "You Dropbox app's access token"|t('remote-core'),
        name: 'dropboxAccessToken',
        id: 'dropboxAccessToken',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.dropboxAccessToken,
        required: (settings.cloudProvider == 'dropbox'),
        errors: settings.getErrors('dropboxAccessToken'),
        warning: configWarning('dropboxAccessToken', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "Dropbox Folder",
        instructions: "An optional folder path within Dropbox to store backups. Must start with a slash but not end with one"|t('remote-core'),
        name: 'dropboxFolder',
        placeholder: '/craft-backups/my-backups',
        id: 'dropboxFolder',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.dropboxFolder,
        errors: settings.getErrors('dropboxFolder'),
        warning: configWarning('dropboxFolder', pluginHandle)
    }) }}
</div>

{# Digital Ocean Spaces #}
<div class="provider provider-do">
    {{ forms.autosuggestField({
        label: "Digital Ocean Spaces Access Key"|t('remote-sync'),
        instructions: "The Digital Ocean API access key"|t('remote-sync'),
        name: 'doAccessKey',
        id: 'doAccessKey',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.doAccessKey,
        required: (settings.cloudProvider == 'do'),
        type: 'password',
        errors: settings.getErrors('doAccessKey'),
        warning: configWarning('doAccessKey', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "Digital Ocean Spaces Secret Key",
        instructions: "The Digital Ocean API secret key"|t('remote-sync'),
        name: 'doSecretKey',
        id: 'doSecretKey',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.doSecretKey,
        required: (settings.cloudProvider == 'do'),
        type: 'password',
        errors: settings.getErrors('doSecretKey'),
        warning: configWarning('doSecretKey', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "Digital Ocean Spaces Name"|t('remote-sync'),
        instructions: "The name of the DO Space you want to send files to"|t('remote-sync'),
        name: 'doSpacesName',
        id: 'doSpacesName',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.doSpacesName,
        placeholder: "craft-sync",
        required: (settings.cloudProvider == 'do'),
        errors: settings.getErrors('doSpacesName'),
        warning: configWarning('doSpacesName', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "Digital Ocean Spaces Region Name"|t('remote-sync'),
        instructions: "The region your DO Space is in"|t('remote-sync'),
        name: 'doRegionName',
        id: 'doRegionName',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.doRegionName,
        placeholder: "fra1",
        required: (settings.cloudProvider == 'do'),
        errors: settings.getErrors('doRegionName'),
        warning: configWarning('doRegionName', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "Digital Ocean Spaces Path"|t('remote-sync'),
        instructions: "A path within your DO Space to prefix your files with. Do not include a leading or trailing slash"|t('remote-sync'),
        name: 'doSpacesPath',
        id: 'doSpacesPath',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.doSpacesPath,
        placeholder: "craft-sync/my-site",
        errors: settings.getErrors('doSpacesPath'),
        warning: configWarning('doSpacesPath', pluginHandle)
    }) }}
</div>

{# Other S3 compliant #}
<div class="provider provider-other-s3">
    {{ forms.autosuggestField({
        label: "Access Key"|t('remote-core'),
        instructions: "The access key associated with your account"|t('remote-core'),
        name: 'otherS3AccessKey',
        id: 'otherS3AccessKey',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.otherS3AccessKey,
        required: (settings.cloudProvider == 'other-s3'),
        type: 'password',
        errors: settings.getErrors('otherS3AccessKey'),
        warning: configWarning('otherS3AccessKey', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "Secret Key",
        instructions: "The secret key associated with your account"|t('remote-core'),
        name: 'otherS3SecretKey',
        id: 'otherS3SecretKey',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.otherS3SecretKey,
        required: (settings.cloudProvider == 'other-s3'),
        type: 'password',
        errors: settings.getErrors('otherS3SecretKey'),
        warning: configWarning('otherS3SecretKey', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "Endpoint"|t('remote-core'),
        instructions: "The endpoint for the S3-compliant provider"|t('remote-core'),
        name: 'otherS3Endpoint',
        id: 'otherS3Endpoint',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.otherS3Endpoint,
        required: (settings.cloudProvider == 'other-s3'),
        errors: settings.getErrors('otherS3Endpoint'),
        warning: configWarning('otherS3Endpoint', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "Bucket Name"|t('remote-core'),
        instructions: "The name of the bucket you want to send backups to"|t('remote-core'),
        name: 'otherS3BucketName',
        id: 'otherS3BucketName',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.otherS3BucketName,
        placeholder: "my-craft-backups",
        required: (settings.cloudProvider == 'other-s3'),
        errors: settings.getErrors('otherS3BucketName'),
        warning: configWarning('otherS3BucketName', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "Region Name"|t('remote-core'),
        instructions: "The region your bucket is in"|t('remote-core'),
        name: 'otherS3RegionName',
        id: 'otherS3RegionName',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.otherS3RegionName,
        required: (settings.cloudProvider == 'other-s3'),
        errors: settings.getErrors('otherS3RegionName'),
        warning: configWarning('otherS3RegionName', pluginHandle)
    }) }}

    {{ forms.autosuggestField({
        label: "Bucket Path"|t('remote-core'),
        instructions: "A path within your bucket to prefix your backups with. Do not include a leading or trailing slash"|t('remote-core'),
        name: 'otherS3BucketPath',
        id: 'otherS3BucketPath',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.otherS3BucketPath,
        placeholder: "craft-backups/my-site",
        errors: settings.getErrors('otherS3BucketPath'),
        warning: configWarning('otherS3BucketPath', pluginHandle)
    }) }}
</div>

<hr>

{{ forms.lightswitchField({
    label: "Use Queue"|t('remote-core'),
    instructions: "Use the built-in Craft queue for performing backup operations"|t('remote-core'),
    name: 'useQueue',
    id: 'useQueue',
    on: settings.useQueue,
    errors: settings.getErrors('useQueue'),
    warning: configWarning('useQueue', pluginHandle)
}) }}

{{ forms.textField({
    label: "Queue 'Time To Reserve'"|t('remote-core'),
    type: "text",
    instructions: "Max time for job execution"|t('remote-core'),
    name: 'queueTtr',
    id: 'queueTtr',
    value: settings.queueTtr,
    errors: settings.getErrors('queueTtr'),
    warning: configWarning('queueTtr', 'remote-core')
}) }}

<hr>

{% block customSettings %}{% endblock %}

<hr>

{{ forms.lightswitchField({
    label: "Hide Databases"|t('remote-core'),
    instructions: "Hide the database section altogether from the utilities page"|t('remote-core'),
    name: 'hideDatabases',
    id: 'hideDatabases',
    on: settings.hideDatabases,
    errors: settings.getErrors('hideDatabases'),
    warning: configWarning('hideDatabases', pluginHandle)
}) }}

{{ forms.lightswitchField({
    label: "Hide Volumes"|t('remote-core'),
    instructions: "Hide the volumes section altogether from the utiltiies page"|t('remote-core'),
    name: 'hideVolumes',
    id: 'hideVolumes',
    on: settings.hideVolumes,
    errors: settings.getErrors('hideVolumes'),
    warning: configWarning('hideVolumes', pluginHandle)
}) }}

<hr>

{{ forms.textField({
    label: "Display Date Format"|t('remote-core'),
    type: "text",
    instructions: "The date format to use to display files in the utilities section"|t('remote-core'),
    name: 'displayDateFormat',
    id: 'displayDateFormat',
    value: settings.displayDateFormat,
    errors: settings.getErrors('displayDateFormat'),
    warning: configWarning('displayDateFormat', 'remote-core')
}) }}